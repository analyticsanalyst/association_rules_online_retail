group_by(invoice) %>%
summarise(products_purchased = n_distinct(stock_code),
average_quanity = mean(quantity)) %>%
mdsr::skim()
combined_years_df %>%
group_by(invoice) %>%
summarise(products_purchased = n_distinct(stock_code),
average_quanity = mean(quantity)) %>%
mdsr::skim() %>%
select(-n)
transaction_format <- combined_years_df %>%
group_by(invoice) %>%
summarise(products_purchased = paste0(description, collapse = ":")) %>%
select(-invoice) %>%
ungroup()
sample_n(transaction_format, 5)
transaction_format <- combined_years_df %>%
group_by(invoice) %>%
summarise(products_purchased = paste0(description, collapse = ":::")) %>%
select(-invoice) %>%
ungroup()
sample_n(transaction_format, 5)
transaction_format <- combined_years_df %>%
group_by(invoice) %>%
summarise(products_purchased = paste0(description, collapse = ":::")) %>%
select(-invoice) %>%
ungroup()
sample_n(transaction_format, 5)
write_csv(transaction_format, "online_retail_2_transactions.csv")
sample_n(transaction_format)
sample_n(transaction_format, 5)
trans <- arules::read.transactions("online_retail_2_transactions.csv",
format = "basket",
sep = ":::",
rm.duplicates=TRUE)
head(combined_years_df)
transaction_format <- combined_years_df %>%
group_by(invoice) %>%
summarise(products_purchased = paste0(description, collapse = ":")) %>%
select(-invoice) %>%
ungroup()
write_csv(transaction_format, "online_retail_2_transactions.csv")
sample_n(transaction_format, 5)
sample_n(transaction_format, 5) %>%
glimpse()
combined_years_df <- combined_years_df %>%
mutate(description = str_replace_all(description, "[:punct:]", ""),
description = str_replace_all(description, "  ", " "))
combined_years_df %>%
group_by(invoice) %>%
summarise(products_purchased = n_distinct(stock_code),
average_quanity = mean(quantity)) %>%
mdsr::skim() %>%
select(-n)
combined_years_df %>%
group_by(cust_char = as.character(customer_id)) %>%
summarise(number_of_invoices = n_distinct(invoice),
products_purchased = n_distinct(stock_code)) %>%
mdsr::skim() %>%
select(-n)
sample_n(transaction_format, 5) %>%
glimpse()
trans <- arules::read.transactions("online_retail_2_transactions.csv",
format = "basket",
sep = ":",
rm.duplicates=TRUE)
summary(trans)
trans <- arules::read.transactions("online_retail_2_transactions.csv",
format = "basket",
sep = ":",
rm.duplicates=TRUE)
glimpse(combined_years_df)
combined_years_df %>%
summarise(unique_descriptions = n_distinct(description),
unique_stock_codes = n_distinct(stock_code))
combined_years_df %>%
group_by(invoice, description) %>%
mutate(description_record_count = n()) %>%
ungroup() %>%
filter(description_record_count>1) %>%
view()
combined_years_df %>%
group_by(invoice, description) %>%
mutate(description_record_count = n()) %>%
ungroup() %>%
filter(description_record_count>1) %>%
arrange(-invoice) %>%
head(500) %>%
view()
combined_years_df %>%
group_by(invoice, description) %>%
mutate(description_record_count = n()) %>%
ungroup() %>%
filter(description_record_count>1) %>%
view()
combined_years_df %>%
filter(invoice==489488) %>%
view()
combined_years_df %>%
filter(invoice==489488) %>%
group_by(invoice) %>%
summarise(products_purchased = paste0(unique(description), collapse = ":"))
combined_years_df %>%
filter(invoice==489488) %>%
group_by(invoice) %>%
summarise(unique_products = unique(description))
combined_years_df <- combined_years_df %>%
mutate(description = str_replace_all(description, "[^[:alnum:]]", ""),
description = str_replace_all(description, "  ", " "))
combined_years_df %>%
filter(invoice==489488) %>%
group_by(invoice) %>%
summarise(unique_products = unique(description))
combined_years_df <- combined_years_df %>%
mutate(description = str_replace_all(description, "[:punct:]", ""),
description = str_replace_all(description, "  ", " "))
combined_years_df %>%
filter(invoice==489488) %>%
group_by(invoice) %>%
summarise(unique_products = unique(description))
combined_years_df <- bind_rows(df_2009_2010_tbl, df_2010_2011_tbl)
combined_years_df <- combined_years_df %>%
mutate(canceled_order = !is.na(str_extract(invoice, "^C"))) %>%
filter(canceled_order==F & !is.na(customer_id))
### clean product descriptions of punctuation
### prevents parsing issues downstream when using ":" to separate products
combined_years_df <- combined_years_df %>%
mutate(description = str_replace_all(description, "[:punct:]", ""),
description = str_replace_all(description, "  ", " "))
combined_years_df %>%
filter(invoice==489488) %>%
group_by(invoice) %>%
summarise(unique_products = unique(description))
combined_years_df %>%
filter(invoice==489488) %>%
filter(description=="CHARLIE LOLA BLUE HOT WATER BOTTLE")
combined_years_df %>%
filter(stock_code=="84031B") %>%
summarise(description_count = n_distinct(description))
combined_years_df %>%
group_by(stock_code) %>%
summarise(description_count = n_distinct(description)) %>%
ungroup() %>%
filter(description_count>1) %>%
view()
combined_years_df %>%
filter(stock_code=="ADJUST") %>%
view()
combined_years_df %>%
filter(contains(description, "Adjustment")) %>%
view()
combined_years_df %>%
filter(str_detect(description, "Adjustment")) %>%
view()
combined_years_df %>%
filter(str_detect(stock_code, "ADJ")) %>%
view()
combined_years_df %>%
group_by(stock_code) %>%
summarise(unique_description_count = n_distinct(description)) %>%
count(unique_description_count)
combined_years_df %>%
group_by(stock_code) %>%
summarise(unique_description_count = n_distinct(description)) %>%
count(unique_description_count) %>%
mutate(percent_total = n/sum(n))
multiple_description_codes <- combined_years_df %>%
group_by(stock_code) %>%
summarise(unique_description_count = n_distinct(description)) %>%
filter(unique_description_count>1)
multiple_description_codes <- combined_years_df %>%
group_by(stock_code) %>%
summarise(unique_description_count = n_distinct(description)) %>%
filter(unique_description_count>1)
multiple_description_codes
multiple_description_codes %>% pull(stock_code)
combined_years_df %>% glimpse()
filter(stock_code %in% multiple_description_codes %>% pull(stock_code))
combined_years_df %>%
filter(stock_code %in% multiple_description_codes %>% pull(stock_code))
combined_years_df %>%
filter(stock_code %in% multiple_description_codes %>% pull(stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = -invoice_date))
view(support_df_l1)
---
title: "Association rules modeling"
output: rmarkdown::github_document
always_allow_html: yes
---
### Notebook objective
- Explore using association rules for online shopping data pattern/trend discovery.
### Association rules overview
- Aka Marketing Basket Analysis
- Historically, association rules models have been used to discover interesting patterns in retailer purchasing data.
- However, association rules can be used in other domains like content streaming, social networks, etc.
- This sort of analysis could power a similar products you might like feature, be used for selecting upsell products in a checkout flow, email marketing/promotions, etc.
- We generate rules for an item set of items. The item set could be one or more items. Think of an item here as a movie or retailer product SKU.
- Problem: brute force frequency calculation of all possible combinations of items is computationally expensive.
- Modeling thresholds and [apriori principle](https://en.wikipedia.org/wiki/Apriori_algorithm) used to prune back the number of association calculations required.
### Key metrics: apriori model from arules package
- Support: frequency of users to buy A and B
- Confidence: of users to who buy A what percent also buy B
- Lift: how likely are users to buy B with A, while controlling for how popular B is. Positive value more likely. negative value less likely.
- Rules can we sorted/prioritized by various metrics depending on use case.
- Rules can included more more than two items (i.e (A, B => C).
- - [Arules intro paper](https://cran.r-project.org/web/packages/arules/vignettes/arules.pdf)
###  Packages
```{r}
required_packages <- c('tidyverse', 'treemap', 'arules', 'arulesViz',
'scales', 'readxl', 'janitor', 'mdsr')
for(p in required_packages) {
library(p,character.only = TRUE)
}
```
```{r}
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/00502/online_retail_II.xlsx"
df_2009_2010 <- read_excel(url, sheet = "Year 2009-2010")
df_2009_2010_tbl <- tibble::as_tibble(
df_2009_2010,
.name_repair = janitor::make_clean_names
) %>%
mutate(data_file_key = "2009_2010")
setwd("~/Documents/GitHub/association_rules_online_retail")
src <- "https://archive.ics.uci.edu/ml/machine-learning-databases/00502/online_retail_II.xlsx"
lcl <- basename(src)
lcl
download.file(url = src, destfile = lcl)
src <- "http://archive.ics.uci.edu/ml/machine-learning-databases/00502/online_retail_II.xlsx"
lcl <- basename(src)
download.file(url = src, destfile = lcl)
lcl <- basename(src)
src
download.file(url = src, destfile = lcl)
df_2009_2010 <- read_excel("online_retail_II.xlsx", sheet = "Year 2009-2010")
df_2009_2010_tbl <- tibble::as_tibble(
df_2009_2010,
.name_repair = janitor::make_clean_names
) %>%
mutate(data_file_key = "2009_2010")
df_2010_2011 <- read_excel("online_retail_II.xlsx", sheet = "Year 2010-2011")
df_2010_2011_tbl <- tibble::as_tibble(
df_2010_2011,
.name_repair = janitor::make_clean_names
) %>%
mutate(data_file_key = "2010_2011")
combined_years_df <- bind_rows(df_2009_2010_tbl, df_2010_2011_tbl)
combined_years_df <- combined_years_df %>%
mutate(canceled_order = !is.na(str_extract(invoice, "^C"))) %>%
filter(canceled_order==F & !is.na(customer_id)) %>%
# filter out adjustment records
filter(!str_detect(stock_code, "ADJUST"))
### clean product descriptions of punctuation
### prevents parsing issues downstream when using ":" to separate products
combined_years_df <- combined_years_df %>%
mutate(description = str_replace_all(description, "[:punct:]", ""),
description = str_replace_all(description, "  ", " "))
combined_years_df %>%
group_by(stock_code) %>%
summarise(unique_description_count = n_distinct(description)) %>%
count(unique_description_count) %>%
mutate(percent_total = n/sum(n))
combined_years_df %>%
group_by(stock_code) %>%
summarise(unique_description_count = n_distinct(description)) %>%
filter(unique_description_count>1)
multiple_description_codes <- combined_years_df %>%
group_by(stock_code) %>%
summarise(unique_description_count = n_distinct(description)) %>%
filter(unique_description_count>1)
combined_years_df %>%
filter(stock_code %in% multiple_description_codes %>% pull(stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = -invoice_date))
combined_years_df %>%
filter(stock_code %in% multiple_description_codes %>% pull(stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = invoice_date))
combined_years_df %>%
filter(stock_code %in% multiple_description_codes %>% pull(stock_code)) %>%
head()
combined_years_df %>%
filter(stock_code %in% unique(multiple_description_codes$stock_code)) %>%
head()
combined_years_df %>%
filter(stock_code %in% unique(multiple_description_codes$stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = invoice_date))
combined_years_df %>%
filter(stock_code %in% unique(multiple_description_codes$stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = -invoice_date))
combined_years_df %>%
filter(stock_code %in% unique(multiple_description_codes$stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = desc(invoice_date)))
combined_years_df %>%
filter(stock_code %in% unique(multiple_description_codes$stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = invoice_date))
combined_years_df %>%
filter(stock_code %in% unique(multiple_description_codes$stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = invoice_date)) %>%
summarise(row_count = n(),
unique_product_count = n_distinct(stock_code))
n_distinct(multiple_description_codes$stock_code)
combined_years_df %>%
filter(stock_code %in% unique(multiple_description_codes$stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = invoice_date)) %>%
summarise(row_count = n(),
unique_product_count = n_distinct(stock_code))
combined_years_df %>%
filter(stock_code %in% unique(multiple_description_codes$stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = invoice_date))
descriptions_to_use <- combined_years_df %>%
filter(stock_code %in% unique(multiple_description_codes$stock_code)) %>%
group_by(stock_code) %>%
summarise(last_description = last(description, order_by = invoice_date)) %>%
ungroup()
descriptions_to_use
combined_years_df %>%
left_join(descriptions_to_use) %>%
mutate(description = ifelse(
is.na(last_description),
description,
last_description
)
)
combined_years_df %>%
group_by(stock_code) %>%
summarise(unique_descriptions = n_distinct(description)) %>%
count(unique_descriptions)
combined_years_df <- combined_years_df %>%
left_join(descriptions_to_use) %>%
mutate(description = ifelse(
is.na(last_description),
description,
last_description
)
) %>%
select(-last_description)
combined_years_df %>%
group_by(stock_code) %>%
summarise(unique_descriptions = n_distinct(description)) %>%
count(unique_descriptions)
transaction_format <- combined_years_df %>%
group_by(invoice) %>%
summarise(products_purchased = paste0(unique(description), collapse = ":")) %>%
select(-invoice) %>%
ungroup()
write_csv(transaction_format, "online_retail_2_transactions.csv")
sample_n(transaction_format, 5) %>%
glimpse()
trans <- arules::read.transactions("online_retail_2_transactions.csv",
format = "basket",
sep = ":")
summary(trans)
combined_years_df %>%
group_by(stock_code, description) %>%
summarise(invoice_count = n_distinct(invoice)) %>%
view()
summary(trans)
item_freq_df <- tibble(item = names(itemFrequency(trans)),
item_order_frequency = itemFrequency(trans))
item_freq_df %>%
arrange(-item_order_frequency) %>%
head()
treemap(item_freq_df,
index=c("level1","item"),
vSize="support",
type="index")
item_freq_df
treemap(item_freq_df,
index=c("item"),
vSize="item_order_frequency",
type="index")
?treemap
itemFrequencyPlot(trans, topN = 25)
item_freq_df %>%
arrange(-item_order_frequency) %>%
head(25)
item_freq_df %>%
arrange(-item_order_frequency) %>%
head(25) %>%
ggplot(aes(y=item,
x=item_order_frequency)) +
geom_col()
item_freq_df %>%
arrange(-item_order_frequency) %>%
head(25) %>%
ggplot(aes(y=reorder(item, -item_order_frequency),
x=item_order_frequency)) +
geom_col()
item_freq_df %>%
arrange(-item_order_frequency) %>%
head(25) %>%
ggplot(aes(y=reorder(item, item_order_frequency),
x=item_order_frequency)) +
geom_col()
item_freq_df %>%
arrange(-item_order_frequency) %>%
head(25) %>%
ggplot(aes(y=reorder(item, item_order_frequency),
x=item_order_frequency)) +
geom_col() +
theme(axis.text.y = element_text(size=6))
item_freq_df %>%
arrange(-item_order_frequency) %>%
head(25) %>%
ggplot(aes(y=reorder(item, item_order_frequency),
x=item_order_frequency)) +
geom_col() +
theme(axis.text.y = element_text(size=6)) +
scale_y_discrete(label = function(x) stringr::str_trunc(x, 12))
item_freq_df %>%
arrange(-item_order_frequency) %>%
head(25) %>%
ggplot(aes(y=reorder(item, item_order_frequency),
x=item_order_frequency)) +
geom_col() +
theme(axis.text.y = element_text(size=6)) +
scale_y_discrete(label = function(x) stringr::str_trunc(x, 18))
item_freq_df %>%
arrange(-item_order_frequency) %>%
head(25) %>%
ggplot(aes(y=reorder(item, item_order_frequency),
x=item_order_frequency)) +
geom_col() +
theme(axis.text.y = element_text(size=6)) +
scale_y_discrete(label = function(x) stringr::str_trunc(x, 24))
retail_rules <- apriori(trans,
parameter = list(
support=0.01,
confidence=0.01,
minlen=2,
maxlen=4
)
)
summary(retail_rules)
retail_rules %>%
sort(by="support") %>%
head(10) %>%
inspect() %>%
view()
combined_years_df %>%
group_by(customer_id) %>%
summarise(invoice_count = n_distinct(invoice))
combined_years_df %>%
group_by(customer_id) %>%
summarise(invoice_count = n_distinct(invoice)) %>%
view()
combined_years_df %>%
group_by(customer_id) %>%
summarise(invoice_count = n_distinct(invoice),
total_quantity = sum(quantity)) %>%
view()
retail_rules %>%
sort(by="support") %>%
head(10) %>%
inspect() %>%
view()
retail_rules %>% glimpse()
product_support_set_df <- retail_rules %>%
inspect() %>%
mutate(items = str_remove_all(items, "\\{"),
items = str_remove_all(items, "\\}")) %>%
separate(items, c("a", "b"), sep = ",")
retail_rules %>%
sort(by="support") %>%
head(50) %>%
inspect() %>%
tibble() %>%
mutate(items = str_remove_all(items, "\\{"),
items = str_remove_all(items, "\\}"))
retail_rules %>%
sort(by="support") %>%
head(50) %>%
inspect()
product_support_set_df <- retail_rules %>%
sort(by="support") %>%
head(50) %>%
inspect()
product_support_set_df %>%
select(lhs, rhs, support)
product_support_set_df %>%
select(lhs, rhs, support) %>%
graph_from_data_frame()
library(ggraph)
library(igraph)
graph_set <- product_support_set_df %>%
select(lhs, rhs, support) %>%
graph_from_data_frame()
graph_set
ggraph(graph_set, layout = "stress") +
geom_edge_link0(alpha=0.4, color="grey40", show.legend = F) +
geom_node_point() +
geom_node_label(aes(label = name),
color="dodgerblue",
size=2, repel = TRUE, show.legend = F,
segment.color="dodgerblue") +
labs(title="Top 200 Most Common Item Purchase Pairs")
ggraph(graph_set) +
geom_edge_link0(alpha=0.4, color="grey40", show.legend = F) +
geom_node_point() +
geom_node_label(aes(label = name),
color="dodgerblue",
size=2, repel = TRUE, show.legend = F,
segment.color="dodgerblue") +
labs(title="Top 200 Most Common Item Purchase Pairs")
